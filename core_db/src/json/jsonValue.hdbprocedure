PROCEDURE "jsonValue" (
out JSONOUT1 table ( VALUE INTEGER ),
out JSONOUT2 table ( VALUE INTEGER ),
out JSONOUT3 table ( VALUE INTEGER ),
out JSONOUT4 table ( "LastName" NVARCHAR(100) )
--out JSONOUT5 table ( "Item" NVARCHAR(100) ),
--out JSONOUT6 table ( "LastName" NVARCHAR(100) )
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   JSONOUT1 = SELECT JSON_VALUE('{"item1":10}', '$.item1') AS value  FROM DUMMY;
   
   JSONOUT2 = SELECT JSON_VALUE('{"item1":{"sub1":10}, "item2":{"sub2":5}, "item3":{"sub3":7}}', '$.*.sub2') AS value  FROM DUMMY;
   
   JSONOUT3 = SELECT JSON_VALUE('[0, 1, 2, 3]', '$[0]') AS value  FROM DUMMY;
   
   JSONOUT4 = SELECT JSON_VALUE('{"firstname":"John"}', '$.lastname' DEFAULT 'No last name found' ON EMPTY) AS "LastName"  FROM DUMMY;
   
  -- JSONOUT5 = SELECT JSON_VALUE('{"item":"string"}', '$.item' RETURNING DECIMAL ERROR ON ERROR) AS "Item"  FROM DUMMY;
   
   -- JSONOUT6 = SELECT JSON_VALUE('{"firstname":"John"}', 'strict $.lastname' ERROR ON ERROR) AS "Last Name"  FROM DUMMY;
END