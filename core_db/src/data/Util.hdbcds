using Core as EPM;

context Util {
    entity Constants {
        key DOMAIN      : String(30);
        key FIXEDVALUE  : String(30);
        key LANGUAGE    : EPM.ABAPLanguage;
            DESCRIPTION : EPM.MString;
    };

    entity Texts {
        key TEXTID      : Integer generated by default as identity(start with 1000000000 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);
            LANGUAGE    : EPM.ABAPLanguage;
            ISOLANGUAGE : EPM.ISOLanguageT;
            TEXT        : EPM.VLString null;
    }
    technical configuration {
        fulltext index FTI_TEXT on (TEXT)
            async
            search only off;
    };

    entity Messages {
        key MESSAGECLASS  : String(20);
        key MESSAGENUMBER : String(3);
        key LANGUAGE      : EPM.ISOLanguageT;
            DESCRIPTION   : EPM.LString null;
            TEXT          : LargeString null;
    };

    entity SSCOOKIE {
        key SESSIONID   : Integer generated by default as identity(start with 1000000000 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);
        key NAME        : String(30);
        key APPLICATION : String(128);
            EXPIRY      : UTCTimestamp;
            DATA        : LargeString;
    };

    entity Notes {
        key NOTEID    : EPM.BusinessKey;
            LINKID    : EPM.BusinessKey;
            AUTHOR    : String(30);
            TEXT      : EPM.LString;
            CREATEDAT : EPM.SDate;
            THUMBNAIL : EPM.LString;
    };

    entity SeriesData {
        key setid  : Integer generated always as identity(start with 1000000000 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);
        key t      : UTCTimestamp;
            FACTOR : Decimal(9, 6);

        series(
        series key(setid)
        period for series(t)
        equidistant increment by interval 1 hour
        )
    };

    entity MySeriesEntity {
        key setId : Integer generated always as identity(start with 1000000000 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);
        key t     : UTCTimestamp;
            value : Decimal(10, 4);

        series (
            series key (setId)
            period for series (t)
            equidistant increment by interval 0.1 second
        )
    };

    //for SHINE 10.3
    temporary entity DataGenerationTime {
        STARTTIME : Integer64;
        ENDTIME   : Integer64;
    }
    technical configuration {
        row store;
    };

    entity Attachments {
        key NOTEID      : EPM.BusinessKey;
            LINKID      : EPM.BusinessKey;
            TYPE        : String(30);
            TITLE       : EPM.LString;
            CREATEDAT   : EPM.SDate;
            DESCRIPTION : EPM.LString;
            SIZE        : String(40);
    };

    define view AttachementsView as
        select from Attachments
        {
            NOTEID,
            TYPE        as "Type",
            TITLE       as "Title",
            CREATEDAT,
            DESCRIPTION as "Description",
            SIZE        as "Size",
            LINKID
        };

    define view NotesView as
        select from Notes
        {
            NOTEID,
            AUTHOR     as "Author",
            TEXT       as "Text",
            CREATEDAT,
            THUMBNAIL  as "Thumbnail",
            LINKID
        };

    @Search.searchable : true
    define view textsView as
        select from Util.Texts as B
        {
            B.TEXTID,
            B.LANGUAGE,
            B.ISOLANGUAGE,

            @Search.defaultSearchElement : true
            B.TEXT

            //SP09 requirement - Order By Clause
        }
        order by
            B.TEXTID;
};