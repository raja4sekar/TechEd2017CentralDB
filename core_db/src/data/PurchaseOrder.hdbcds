context PurchaseOrder {
    type BusinessKey : String(10);
    type SDate : LocalDate;
    type CurrencyT : String(5);
    type AmountT : Decimal(15, 2);
    type QuantityT : Decimal(13, 3);
    type UnitT : String(3);
    type StatusT : String(1);
    type HistoryT {
        CREATEDBY : BusinessKey;
        CREATEDAT : SDate;
        CHANGEDBY : BusinessKey;
        CHANGEDAT : SDate;
    };

    entity Header {
        key PURCHASEORDERID : Integer generated by default as identity(start with 200000000 increment by 1 no minvalue maxvalue 2999999999 no cache no cycle);
            ITEMS           : association[1, 0..*] to Item on Header.PURCHASEORDERID = PURCHASEORDERID;
            HISTORY         : HistoryT;
            NOTEID          : BusinessKey null;
            PARTNER         : BusinessKey;
            CURRENCY        : CurrencyT;
            GROSSAMOUNT     : AmountT;
            NETAMOUNT       : AmountT;
            TAXAMOUNT       : AmountT;
            LIFECYCLESTATUS : StatusT;
            APPROVALSTATUS  : StatusT;
            CONFIRMSTATUS   : StatusT;
            ORDERINGSTATUS  : StatusT;
            INVOICINGSTATUS : StatusT;
    }
    technical configuration {
        column store;
    };

    entity Item {
        key POHeader     : association[*, 1..1] to Header { PURCHASEORDERID };
        key PRODUCT      : BusinessKey;
            NOTEID       : BusinessKey null;
            CURRENCY     : CurrencyT;
            GROSSAMOUNT  : AmountT;
            NETAMOUNT    : AmountT;
            TAXAMOUNT    : AmountT;
            QUANTITY     : QuantityT;
            QUANTITYUNIT : UnitT;
            DELIVERYDATE : SDate;
    }
    technical configuration {
        column store;
        //    index PURCHASEORDER_ITEM_ID on (POHeader.PURCHASEORDERID) asc;
    };

    define view ItemView as
        select from Item
        {
            POHeader.PURCHASEORDERID as "PurchaseOrderItemId",
            POHeader.PARTNER         as "PartnerId",
            PRODUCT                  as "ProductID",
            CURRENCY                 as "CurrencyCode",
            GROSSAMOUNT              as "Amount",
            NETAMOUNT                as "NetAmount",
            TAXAMOUNT                as "TaxAmount",
            QUANTITY                 as "Quantity",
            QUANTITYUNIT             as "QuantityUnit",
            DELIVERYDATE             as "DeliveryDate1"
        }
        with structured privilege check;
};