using Core as EPM;
using Util;
using PO;
using SO;
using MD;
using sap.common::UI as UI;
using annotations.Importance;
using annotations.EndUserText;
using annotations.valueList;
using "core.models::GET_PARTNER_ROLES" as getPartnerRoles;
using "core.models::GET_COUNTRIES" as getCountries;
using "core.models::PRODUCTS" as PRODUCTS;

context MDViews {
   define view BPView as
      select from MD.BusinessPartner
      mixin
      {
         ORDERS : association [ * ] to SO.Header on
            ORDERS.PARTNER.PARTNERID = $projection.PARTNERID;
      }
      into
      {
         PARTNERID,
         ORDERS
      };

   view BPOrdersView as
      select from BPView
      {
         PARTNERID,
         ORDERS[
            LIFECYCLESTATUS = 'N'
         ].SALESORDERID as orderId
      };

   view BPOrders2View as
      select from BPView
      {
         PARTNERID,
         ORDERS[
            LIFECYCLESTATUS = 'N'
         ].{
            SALESORDERID as orderId,
            GROSSAMOUNT  as grossAmt
         }
      };

   view BPOrders3View as
      select from BPView
      {
         PARTNERID,
         ORDERS[
            LIFECYCLESTATUS = 'N'
         ].{
            SALESORDERID          as orderId,
            GROSSAMOUNT           as grossAmt,
            ITEMS[
               NETAMOUNT > 200
            ].{
               PRODUCT.PRODUCTID,
               NETAMOUNT
            }
         }
      };

   define view BuyerView as
      select from MD.BusinessPartner
      {
         PARTNERID                   as "Id",
         EMAILADDRESS                as "EmailAddress",
         COMPANYNAME                 as "CompanyName",
         ADDRESSES.CITY              as "City",
         ADDRESSES.POSTALCODE        as "PostalCode",
         ADDRESSES.STREET            as "Street",
         ADDRESSES.BUILDING          as "Building",
         ADDRESSES.COUNTRY           as "Country",
         ADDRESSES.REGION            as "Region",
         HISTORY.CREATEDBY.LOGINNAME as "CreatedBy"
      }
      where
         PARTNERROLE = '1';

   define view partnerRoles as
      select from getPartnerRoles
      {
         @UI.lineItem       : [ { 
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 10
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Partner Role'
                               } ]
         PARTNERROLE,

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 20
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Role Description'
                               } ]
         PARTNERDESC
      };

   define view counties as
      select from getCountries
      {
         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 10
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Country Name'
                               } ]
         NAME,

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 20
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Country Code'
                               } ]
         CODE
      };

   define view SupplierView as
      select from MD.BusinessPartner
      {
         PARTNERID                   as "Id",
         EMAILADDRESS                as "EmailAddress",
         COMPANYNAME                 as "CompanyName",
         ADDRESSES.CITY              as "City",
         ADDRESSES.POSTALCODE        as "PostalCode",
         ADDRESSES.STREET            as "Street",
         ADDRESSES.BUILDING          as "Building",
         ADDRESSES.COUNTRY           as "Country",
         ADDRESSES.REGION            as "Region",
         HISTORY.CREATEDBY.LOGINNAME as "CreatedBy"
      };

   define view SupplierViewVH as
      select from SupplierView
      {
         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 10
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier ID'
                               } ]
         "Id"   as "Supplier_Id",

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 20
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier Name'
                               } ]
         "CompanyName" as "Supplier_CompanyName"
      };

   define view BPAddrExt as
      select from MD.BusinessPartner
      {
         PARTNERID,
         ADDRESSES.STREET || ', ' || ADDRESSES.CITY                                               as FULLADDRESS,
         round(ADDRESSES.POINT.st_distance(new st_point(8.644072, 49.292910), 'meter') / 1000, 1) as distFromWDF03
      };

   define view NewYorkEmployees as
      select from MD.Employees as emp
      {
         NAME.FIRST,
         NAME.LAST,
         ADDRESSES.ADDRESSID as "ADDID",
         ADDRESSES.CITY      as CITY
      }
      where
         'New York' = ADDRESSES.CITY;

   define view ProductViewSub as
      select from     MD.Products as prod
      {
         PRODUCTID as "Product_Id",
         (select from PO.Item as a       {
            sum("GROSSAMOUNT") as SUM
         }
         where
            a.PRODUCT.PRODUCTID = prod.PRODUCTID
         )         as PO_SUM
      };

   define view ProductView as
      select from MD.Products
      mixin
      {
         PO_ORDERS : association [ * ] to PO.ItemView on
            PO_ORDERS."ProductID" = $projection."Product_Id";
      }
      into
      {
         PRODUCTID                     as "Product_Id",
         NAMEID,
         DESCID,
         CATEGORY                      as "Product_Category",
         CURRENCY                      as "Product_Currency",
         PRICE                         as "Product_Price",
         TYPECODE                      as "Product_TypeCode",
         WEIGHTMEASURE                 as "Product_WeightMeasure",
         WEIGHTUNIT                    as "Product_WeightUnit",
         SUPPLIER.PARTNERID            as "Supplier_Id",
         SUPPLIER.COMPANYNAME          as "Supplier_CompanyName",
         SUPPLIER.ADDRESSES.CITY       as "Supplier_City",
         SUPPLIER.ADDRESSES.POSTALCODE as "Supplier_PostalCode",
         SUPPLIER.ADDRESSES.STREET     as "Supplier_Street",
         SUPPLIER.ADDRESSES.BUILDING   as "Supplier_Building",
         SUPPLIER.ADDRESSES.COUNTRY    as "Supplier_Country",
         PO_ORDERS
      };

   define view ProductsValueHelp as
      select from PRODUCTS
      {
         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 10
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Product ID'
                               }, {
                                  language : 'DE',
                                  text : 'Produkt ID'
                               } ]
         "Product_Id",

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 20
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Product Name'
                               } ]
         "Product_Name"
      };

   define view productCategoryVH as
      select from MD.Products distinct
      {
         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 10
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Product Category'
                               } ]
         CATEGORY as "Product_Category"
      };

   define view ProductsConsumption as
      select from MD.Products
      {
         @UI.lineItem           : [ {
                                      importance : Importance.High
                                   } ]
         @UI.fieldGroup         : [ {
                                      position : 10
                                   } ]
         @EndUserText.label     : [ {
                                      language : 'EN',
                                      text : 'Product ID'
                                   }, {
                                      language : 'DE',
                                      text : 'Produkt ID'
                                   } ]
         @EndUserText.quickInfo : [ {
                                      language : 'EN',
                                      text : 'Product ID Quick'
                                   }, {
                                      language : 'DE',
                                      text : 'Produkt ID Schnell'
                                   } ]
         @valueList             : {
                                     collectionPath : 'ProductsVH',
                                     searchSupported : false,
                                     parameterInOut : [ {
                                        localDataProperty : 'Product_Id',
                                        valueListProperty : 'Product_Id'
                                     } ],
                                     parameterDisplayOnly : [ {
                                        valueListProperty : 'Product_Name'
                                     } ]
                                  }
         PRODUCTID                     as "Product_Id",

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 20
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Product Category'
                               } ]
         @valueList         : {
                                 collectionPath : 'ProductCatVh',
                                 searchSupported : false,
                                 parameterInOut : [ {
                                    localDataProperty : 'Product_Category',
                                    valueListProperty : 'Product_Category'
                                 } ]
                              }
         CATEGORY                      as "Product_Category",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Currency'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 30
                               } ]
         CURRENCY                      as "Product_Currency",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Product Price'
                               } ]
         @UI.fieldGroup     : [ {
                                  exclude : true
                               } ]
         PRICE                         as "Product_Price",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Type Code'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 40
                               } ]
         TYPECODE                      as "Product_TypeCode",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Weight'
                               } ]
         @UI.fieldGroup     : [ {
                                  exclude : true
                               } ]
         WEIGHTMEASURE                 as "Product_WeightMeasure",

         @UI.lineItem       : [ {
                                  importance : Importance.Low
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Weight Unit'
                               } ]
         @UI.fieldGroup     : [ {
                                  exclude : true
                               } ]
         WEIGHTUNIT                    as "Product_WeightUnit",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier ID'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 50
                               } ]
         @valueList         : {
                                 collectionPath : 'SupplierVH',
                                 searchSupported : false,
                                 parameterInOut : [ {
                                    localDataProperty : 'Supplier_Id',
                                    valueListProperty : 'Supplier_Id'
                                 } ],
                                 parameterDisplayOnly : [ {
                                    valueListProperty : 'Supplier_CompanyName'
                                 } ]
                              }
         SUPPLIER.PARTNERID            as "Supplier_Id",

         @UI.lineItem       : [ {
                                  importance : Importance.High
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 60
                               } ]
         SUPPLIER.COMPANYNAME          as "Supplier_CompanyName",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier City'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 70
                               } ]
         SUPPLIER.ADDRESSES.CITY       as "Supplier_City",
         SUPPLIER.ADDRESSES.POSTALCODE as "Supplier_PostalCode",
         SUPPLIER.ADDRESSES.STREET     as "Supplier_Street",
         SUPPLIER.ADDRESSES.BUILDING   as "Supplier_Building",

         @UI.lineItem       : [ {
                                  importance : Importance.Medium
                               } ]
         @EndUserText.label : [ {
                                  language : 'EN',
                                  text : 'Supplier Country'
                               } ]
         @UI.fieldGroup     : [ {
                                  position : 80
                               } ]
         @valueList         : {
                                 collectionPath : 'Countries',
                                 searchSupported : false,
                                 parameterInOut : [ {
                                    localDataProperty : 'Supplier_Country',
                                    valueListProperty : 'CODE'
                                 } ],
                                 parameterDisplayOnly : [ {
                                    valueListProperty : 'NAME'
                                 } ]
                              }
         SUPPLIER.ADDRESSES.COUNTRY    as "Supplier_Country"
      };

   define view ProductValuesView as
      select from MDViews.ProductView
      {
         "Product_Id",
         PO_ORDERS."CurrencyCode" as "CurrencyCode",
         sum(PO_ORDERS."Amount")  as "POGrossAmount"
      }
      group by
         "Product_Id",
         PO_ORDERS."CurrencyCode";

   @Search.searchable : true
   define view texts as
      select from Util.Texts as B
      {
         B.TEXTID,
         B.LANGUAGE,
         B.ISOLANGUAGE,

         @Search.defaultSearchElement : true
         B.TEXT
      };

   @Search.searchable        : true
   @EnterpriseSearch.enabled : true
   define view productTexts as
      select from MD.Products as A
      mixin
      {
         T : association [ 1 ] to texts on
            A.NAMEID = T.TEXTID;
      }
      into
      {
         @EnterpriseSearch.key : true
         A.PRODUCTID,

         @EnterpriseSearch.usageMode  : [ #AUTO_FACET ]
         @Search.defaultSearchElement : true
         A.CATEGORY,

         @EnterpriseSearch.highlighted      : {
                                                 enabled : true
                                              }
         @Search.defaultSearchElement       : true
         @EnterpriseSearch.presentationMode : [ #DETAIL ]
         T.TEXT
      };

};